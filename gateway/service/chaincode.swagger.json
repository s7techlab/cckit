{
  "swagger": "2.0",
  "info": {
    "title": "service/chaincode.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ChaincodeService"
    },
    {
      "name": "ChaincodeEventsService"
    },
    {
      "name": "ChaincodeInstanceService"
    },
    {
      "name": "ChaincodeInstanceEventsService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/chaincode-instance/events": {
      "get": {
        "summary": "Chaincode events stream",
        "operationId": "ChaincodeInstanceEventsService_Events",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/protosChaincodeEvent"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of protosChaincodeEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "block.from",
            "description": "from block.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "block.to",
            "description": "to block.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ChaincodeInstanceEventsService"
        ]
      }
    },
    "/chaincode-instance/exec": {
      "post": {
        "summary": "Exec: Query or Invoke",
        "operationId": "ChaincodeInstanceService_Exec",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceChaincodeInstanceExec"
            }
          }
        ],
        "tags": [
          "ChaincodeInstanceService"
        ]
      }
    },
    "/chaincode-instance/invoke": {
      "post": {
        "summary": "Invoke chaincode on peers, according to endorsement policy and the SEND to orderer",
        "operationId": "ChaincodeInstanceService_Invoke",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceChaincodeInstanceInput"
            }
          }
        ],
        "tags": [
          "ChaincodeInstanceService"
        ]
      }
    },
    "/chaincode-instance/query": {
      "get": {
        "summary": "Query chaincode on home peer. Do NOT send to orderer.",
        "operationId": "ChaincodeInstanceService_Query",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "args",
            "description": "Input contains the arguments for invocation.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ChaincodeInstanceService"
        ]
      }
    },
    "/chaincode/events": {
      "get": {
        "summary": "Chaincode events stream",
        "operationId": "ChaincodeEventsService_Events",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/protosChaincodeEvent"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of protosChaincodeEvent"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chaincode.chaincode",
            "description": "Chaincode name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "chaincode.channel",
            "description": "Channel name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "block.from",
            "description": "from block.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "block.to",
            "description": "to block.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "ChaincodeEventsService"
        ]
      }
    },
    "/chaincode/exec": {
      "post": {
        "summary": "Exec: Query or Invoke",
        "operationId": "ChaincodeService_Exec",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceChaincodeExec"
            }
          }
        ],
        "tags": [
          "ChaincodeService"
        ]
      }
    },
    "/chaincode/invoke": {
      "post": {
        "summary": "Invoke chaincode on peers, according to endorsement policy and the SEND to orderer",
        "operationId": "ChaincodeService_Invoke",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serviceChaincodeInput"
            }
          }
        ],
        "tags": [
          "ChaincodeService"
        ]
      }
    },
    "/chaincode/query": {
      "get": {
        "summary": "Query chaincode on home peer. Do NOT send to orderer.",
        "operationId": "ChaincodeService_Query",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protosProposalResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "chaincode.chaincode",
            "description": "Chaincode name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "chaincode.channel",
            "description": "Channel name.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "args",
            "description": "Input contains the arguments for invocation.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "ChaincodeService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protosChaincodeEvent": {
      "type": "object",
      "properties": {
        "chaincodeId": {
          "type": "string"
        },
        "txId": {
          "type": "string"
        },
        "eventName": {
          "type": "string"
        },
        "payload": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "ChaincodeEvent is used for events and registrations that are specific to chaincode\nstring type - \"chaincode\""
    },
    "protosEndorsement": {
      "type": "object",
      "properties": {
        "endorser": {
          "type": "string",
          "format": "byte",
          "title": "Identity of the endorser (e.g. its certificate)"
        },
        "signature": {
          "type": "string",
          "format": "byte",
          "title": "Signature of the payload included in ProposalResponse concatenated with\nthe endorser's certificate; ie, sign(ProposalResponse.payload + endorser)"
        }
      },
      "title": "An endorsement is a signature of an endorser over a proposal response.  By\nproducing an endorsement message, an endorser implicitly \"approves\" that\nproposal response and the actions contained therein. When enough\nendorsements have been collected, a transaction can be generated out of a\nset of proposal responses.  Note that this message only contains an identity\nand a signature but no signed payload. This is intentional because\nendorsements are supposed to be collected in a transaction, and they are all\nexpected to endorse a single proposal response/action (many endorsements\nover a single proposal response)"
    },
    "protosProposalResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "integer",
          "format": "int32",
          "title": "Version indicates message protocol version"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp is the time that the message\nwas created as  defined by the sender"
        },
        "response": {
          "$ref": "#/definitions/protosResponse",
          "title": "A response message indicating whether the\nendorsement of the action was successful"
        },
        "payload": {
          "type": "string",
          "format": "byte",
          "title": "The payload of response. It is the bytes of ProposalResponsePayload"
        },
        "endorsement": {
          "$ref": "#/definitions/protosEndorsement",
          "title": "The endorsement of the proposal, basically\nthe endorser's signature over the payload"
        }
      },
      "description": "A ProposalResponse is returned from an endorser to the proposal submitter.\nThe idea is that this message contains the endorser's response to the\nrequest of a client to perform an action over a chaincode (or more\ngenerically on the ledger); the response might be success/error (conveyed in\nthe Response field) together with a description of the action and a\nsignature over it by that endorser.  If a sufficient number of distinct\nendorsers agree on the same action and produce signature to that effect, a\ntransaction can be generated and sent for ordering."
    },
    "protosResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "A status code that should follow the HTTP status codes."
        },
        "message": {
          "type": "string",
          "description": "A message associated with the response code."
        },
        "payload": {
          "type": "string",
          "format": "byte",
          "description": "A payload that can be used to include metadata with this response."
        }
      },
      "description": "A response with a representation similar to an HTTP response that can\nbe used within another message."
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "serviceBlockRange": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "int64",
          "title": "from block"
        },
        "to": {
          "type": "string",
          "format": "int64",
          "title": "to block"
        }
      }
    },
    "serviceChaincodeExec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/serviceInvocationType"
        },
        "input": {
          "$ref": "#/definitions/serviceChaincodeInput"
        }
      }
    },
    "serviceChaincodeInput": {
      "type": "object",
      "properties": {
        "chaincode": {
          "$ref": "#/definitions/serviceChaincodeLocator"
        },
        "args": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "Input contains the arguments for invocation."
        },
        "transient": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "description": "TransientMap contains data (e.g. cryptographic material) that might be used\nto implement some form of application-level confidentiality. The contents\nof this field are supposed to always be omitted from the transaction and\nexcluded from the ledger."
        }
      }
    },
    "serviceChaincodeInstanceExec": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/serviceInvocationType"
        },
        "input": {
          "$ref": "#/definitions/serviceChaincodeInstanceInput"
        }
      }
    },
    "serviceChaincodeInstanceInput": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "description": "Input contains the arguments for invocation."
        },
        "transient": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "byte"
          },
          "description": "TransientMap contains data (e.g. cryptographic material) that might be used\nto implement some form of application-level confidentiality. The contents\nof this field are supposed to always be omitted from the transaction and\nexcluded from the ledger."
        }
      }
    },
    "serviceChaincodeLocator": {
      "type": "object",
      "properties": {
        "chaincode": {
          "type": "string",
          "title": "Chaincode name"
        },
        "channel": {
          "type": "string",
          "title": "Channel name"
        }
      }
    },
    "serviceInvocationType": {
      "type": "string",
      "enum": [
        "QUERY",
        "INVOKE"
      ],
      "default": "QUERY"
    }
  }
}
