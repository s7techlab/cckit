syntax = "proto3";
// Commercial paper service
option go_package = "github.com/s7techlab/cckit/extensions/debug";
package extensions.debug;

import "google/api/annotations.proto";

// State key prefix
message Prefix {
    // parts of key
    repeated string key = 1;
}

message Prefixes {
    repeated Prefix prefixes = 1;
}

// State key prefix match count
message PrefixesMatchCount {
    map<string, uint32> matches = 1;
}

// State keys
message CompositeKeys {
    repeated CompositeKey keys = 1;
}

// State key
message CompositeKey {
    repeated string key = 1;
}

// State value
message Value {
    repeated string key = 1;
    bytes value = 2;
    string json = 3;
}

// Debug state service
// allows to directly manage chaincode state
service DebugStateService {
    // Clear all state or, if prefixes are defined, only prefix matched
    rpc Clean (Prefixes) returns (PrefixesMatchCount) {
        option (google.api.http) = {
            put: "/debug/state/clean"
            body: "*"
        };
    }

    // Get keys list, returns all keys or, if prefixes are defined, only prefix matched
    rpc ListKeys (Prefix) returns (CompositeKeys) {
        option (google.api.http) = {
            get: "/debug/state/keys/{key}"
        };
    }

    // Get state value by key
    rpc GetState (CompositeKey) returns (Value) {
        option (google.api.http) = {
            get: "/debug/state/{key}"
        };
    }

    // Put state value
    rpc PutState (Value) returns (Value) {
        option (google.api.http) = {
            put : "/debug/state"
            body: "*"
        };
    }

    // Delete state value
    rpc DeleteState (CompositeKey) returns (Value) {
        option (google.api.http) = {
            delete: "/debug/state/{key}"
        };
    }
}
