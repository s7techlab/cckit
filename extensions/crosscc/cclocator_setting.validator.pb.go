// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: crosscc/cclocator_setting.proto

package crosscc

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ServiceLocatorSetRequest) Validate() error {
	return nil
}
func (this *ServiceLocator) Validate() error {
	return nil
}
func (this *ServiceLocatorId) Validate() error {
	return nil
}
func (this *ServiceLocators) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *ServiceLocatorSet) Validate() error {
	return nil
}
func (this *PingServiceResponse) Validate() error {
	if this.Locator != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Locator); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Locator", err)
		}
	}
	return nil
}
func (this *PingServiceResponses) Validate() error {
	for _, item := range this.Responses {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Responses", err)
			}
		}
	}
	return nil
}
