// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: owner/chaincode_owner.proto

package owner

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *ChaincodeOwners) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *ChaincodeOwner) Validate() error {
	if this.ExpiresAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExpiresAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExpiresAt", err)
		}
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *CreateOwnerRequest) Validate() error {
	if this.MspId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("MspId", fmt.Errorf(`value '%v' must not be an empty string`, this.MspId))
	}
	if !(len(this.Cert) > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Cert", fmt.Errorf(`value '%v' must have a length greater than '0'`, this.Cert))
	}
	return nil
}
func (this *UpdateOwnerRequest) Validate() error {
	if this.MspId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("MspId", fmt.Errorf(`value '%v' must not be an empty string`, this.MspId))
	}
	if !(len(this.Cert) > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Cert", fmt.Errorf(`value '%v' must have a length greater than '0'`, this.Cert))
	}
	return nil
}
func (this *OwnerId) Validate() error {
	if this.MspId == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("MspId", fmt.Errorf(`value '%v' must not be an empty string`, this.MspId))
	}
	if this.Subject == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Subject", fmt.Errorf(`value '%v' must not be an empty string`, this.Subject))
	}
	return nil
}
func (this *ChaincodeOwnerCreated) Validate() error {
	if this.ExpiresAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExpiresAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExpiresAt", err)
		}
	}
	return nil
}
func (this *ChaincodeOwnerUpdated) Validate() error {
	if this.ExpiresAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.ExpiresAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("ExpiresAt", err)
		}
	}
	return nil
}
func (this *ChaincodeOwnerDeleted) Validate() error {
	return nil
}
