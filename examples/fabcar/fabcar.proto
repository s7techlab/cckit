syntax = "proto3";

package examples.fabcar;

option go_package = "github.com/s7techlab/cckit/examples/fabcar";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

import "mwitkow/go-proto-validators/validator.proto";

service FabCarService {
  rpc CreateMaker (CreateMakerRequest) returns (Maker) {
    option (google.api.http) = {
      post: "/fabcar/makers"
      body: "*"
    };
  }

  rpc DeleteMaker (MakerName) returns (Maker) {
    option (google.api.http) = {
      delete: "/fabcar/makers/{name}"
    };
  }

  rpc GetMaker (MakerName) returns (Maker) {
    option (google.api.http) = {
      get: "/fabcar/makers/{name}"
    };
  }

  rpc ListMakers (google.protobuf.Empty) returns (Makers) {
    option (google.api.http) = {
      get: "/fabcar/makers"
    };
  }

  rpc CreateCar (CreateCarRequest) returns (CarView) {
    option (google.api.http) = {
      post: "/fabcar/cars"
      body: "*"
    };
  }

  rpc UpdateCar (UpdateCarRequest) returns (CarView) {
    option (google.api.http) = {
      put: "/fabcar/cars/{id}"
      body: "*"
    };
  }

  rpc DeleteCar (CarId) returns (CarView) {
    option (google.api.http) = {
      delete: "/fabcar/cars/{id}"
    };
  }

  rpc GetCar (CarId) returns (Car) {
    option (google.api.http) = {
      get: "/fabcar/cars/{id}"
    };
  }

  rpc GetCarView (CarId) returns (CarView) {
    option (google.api.http) = {
      get: "/fabcar/cars/{id}/view"
    };
  }

  rpc ListCars (google.protobuf.Empty) returns (Cars) {
    option (google.api.http) = {
      get: "/fabcar/cars"
    };
  }

  rpc UpdateCarOwners (UpdateCarOwnersRequest) returns (CarOwners) {
    option (google.api.http) = {
      put: "/fabcar/cars/{car_id}/owners"
    };
  }

  rpc DeleteCarOwner (CarOwnerId) returns (CarOwner) {
    option (google.api.http) = {
      delete: "/fabcar/cars/{car_id}/owners/{first_name}/{second_name}"
    };
  }

  rpc GetCarOwner (CarOwnerId) returns (CarOwner) {
    option (google.api.http) = {
      get: "/fabcar/cars/{car_id}/owners/{first_name}/{second_name}"
    };
  }

  rpc ListCarOwners (CarId) returns (CarOwners) {
    option (google.api.http) = {
      get: "/fabcar/cars/{id}/owners"
    };
  }

  rpc UpdateCarDetails (UpdateCarDetailsRequest) returns (CarDetails) {
    option (google.api.http) = {
      put: "/fabcar/cars/{car_id}/details"
    };
  }

  rpc DeleteCarDetail (CarDetailId) returns (CarDetail) {
    option (google.api.http) = {
      delete: "/fabcar/cars/{car_id}/details/{type}"
    };
  }

  rpc GetCarDetail (CarDetailId) returns (CarDetail) {
    option (google.api.http) = {
      get: "/fabcar/cars/{car_id}/details/{type}"
    };
  }

  rpc ListCarDetails (CarId) returns (CarDetails) {
    option (google.api.http) = {
      get: "/fabcar/cars/{id}/details"
    };
  }
}

// Dictionaries
enum DetailType {
  WHEELS = 0;
  BATTERY = 1;
}

// Entities
message CreateMakerRequest {
  string name = 1 [(validator.field) = {string_not_empty: true}];
  string country = 2 [(validator.field) = {string_not_empty: true}];
  uint64 foundation_year = 3 [(validator.field) = {int_gt: 1885}]; // in 1886 was founded the oldest automaker - Mercedes-Benz
}

message MakerName {
  string name = 1 [(validator.field) = {string_not_empty: true}];
}

message Maker {
  string name = 1;
  string country = 2;
  uint64 foundation_year = 3;
}

message Makers {
  repeated Maker items = 1;
}

message CreateCarRequest {
  string make = 1 [(validator.field) = {string_not_empty: true}];
  string model = 2 [(validator.field) = {string_not_empty: true}];
  string colour = 3 [(validator.field) = {string_not_empty: true}];
  uint64 number = 4 [(validator.field) = {int_gt: 0}];
  repeated SetCarOwner owners = 5;
  repeated SetCarDetail details = 6 [(validator.field) = {repeated_count_min: 1}];
}

message UpdateCarRequest {
  repeated string id = 1 [(validator.field) = {repeated_count_min: 1}];
  string color = 2 [(validator.field) = {string_not_empty: true}];
  repeated SetCarOwner owners = 3;
  repeated SetCarDetail details = 4;
}

message SetCarOwner {
  string first_name = 1 [(validator.field) = {string_not_empty: true}];
  string second_name = 2 [(validator.field) = {string_not_empty: true}];
  string vehicle_passport = 3 [(validator.field) = {string_not_empty: true}];
}

message SetCarDetail {
  DetailType type = 1;
  string make = 2 [(validator.field) = {string_not_empty: true}];
}

message CarView {
  Car car = 1;
  CarOwners owners = 2;
  CarDetails details = 3;
}

message Car {
  repeated string id = 1 [(validator.field) = {repeated_count_min: 1}];
  string make = 2 [(validator.field) = {string_not_empty: true}];
  string model = 3 [(validator.field) = {string_not_empty: true}];
  string colour = 4 [(validator.field) = {string_not_empty: true}];
  uint64 number = 5 [(validator.field) = {int_gt: 0}];
  google.protobuf.Timestamp updated_at = 6;
}

message CarOwner {
  repeated string car_id = 1 [(validator.field) = {repeated_count_min: 1}];
  string first_name = 2 [(validator.field) = {string_not_empty: true}];
  string second_name = 3 [(validator.field) = {string_not_empty: true}];
  string vehicle_passport = 4 [(validator.field) = {string_not_empty: true}];
  google.protobuf.Timestamp updated_at = 5;
}

message CarDetail {
  repeated string car_id = 1 [(validator.field) = {repeated_count_min: 1}];
  DetailType type = 2;
  string make = 3 [(validator.field) = {string_not_empty: true}];
  google.protobuf.Timestamp updated_at = 4;
}

message CarId {
  repeated string id = 1 [(validator.field) = {repeated_count_min: 1}];
}

message Cars {
  repeated Car items = 1;
}

message UpdateCarOwnersRequest {
  repeated string car_id = 1 [(validator.field) = {repeated_count_min: 1}];
  repeated SetCarOwner owners = 2 [(validator.field) = {repeated_count_min: 1}];
}

message CarOwnerId {
  repeated string car_id = 1 [(validator.field) = {repeated_count_min: 1}];
  string first_name = 2 [(validator.field) = {string_not_empty: true}];
  string second_name = 3 [(validator.field) = {string_not_empty: true}];
}

message CarOwners {
  repeated CarOwner items = 1;
}

message UpdateCarDetailsRequest {
  repeated string car_id = 1 [(validator.field) = {repeated_count_min: 1}];
  repeated SetCarDetail details = 2 [(validator.field) = {repeated_count_min: 1}];
}

message CarDetailId {
  repeated string car_id = 1 [(validator.field) = {repeated_count_min: 1}];
  DetailType type = 2;
}

message CarDetails {
  repeated CarDetail items = 1;
}

// Events
message MakerCreated {
  string name = 1;
  string country = 2;
  uint64 foundation_year = 3;
}

message MakerDeleted {
  string name = 1;
  string country = 2;
  uint64 foundation_year = 3;
}

message CarCreated {
  repeated string id = 1;
  string make = 2;
  string model = 3;
  string colour = 4;
  uint64 number = 5;
}

message CarDeleted {
  repeated string id = 1;
  string make = 2;
  string model = 3;
  string colour = 4;
  uint64 number = 5;
  CarOwners owners = 6;
  CarDetails details = 7;
}

message CarUpdated {
  repeated string id = 1;
  string colour = 2;
}

message CarOwnersUpdated {
  CarOwners owners = 1;
}

message CarOwnerDeleted {
  CarOwner owner = 1;
}

message CarDetailsUpdated {
  CarDetails details = 1;
}

message CarDetailDeleted {
  CarDetail detail = 1;
}
