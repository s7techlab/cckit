// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: fabcar/fabcar.proto

package fabcar

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *CreateMakerRequest) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if this.Country == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Country", fmt.Errorf(`value '%v' must not be an empty string`, this.Country))
	}
	if !(this.FoundationYear > 1885) {
		return github_com_mwitkow_go_proto_validators.FieldError("FoundationYear", fmt.Errorf(`value '%v' must be greater than '1885'`, this.FoundationYear))
	}
	return nil
}
func (this *MakerName) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}
func (this *Maker) Validate() error {
	return nil
}
func (this *Makers) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *CreateCarRequest) Validate() error {
	if this.Make == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Make", fmt.Errorf(`value '%v' must not be an empty string`, this.Make))
	}
	if this.Model == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Model", fmt.Errorf(`value '%v' must not be an empty string`, this.Model))
	}
	if this.Colour == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Colour", fmt.Errorf(`value '%v' must not be an empty string`, this.Colour))
	}
	if !(this.Number > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Number", fmt.Errorf(`value '%v' must be greater than '0'`, this.Number))
	}
	for _, item := range this.Owners {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Owners", err)
			}
		}
	}
	if len(this.Details) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Details", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Details))
	}
	for _, item := range this.Details {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Details", err)
			}
		}
	}
	return nil
}
func (this *UpdateCarRequest) Validate() error {
	if len(this.Id) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Id))
	}
	if this.Color == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Color", fmt.Errorf(`value '%v' must not be an empty string`, this.Color))
	}
	for _, item := range this.Owners {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Owners", err)
			}
		}
	}
	for _, item := range this.Details {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Details", err)
			}
		}
	}
	return nil
}
func (this *SetCarOwner) Validate() error {
	if this.FirstName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("FirstName", fmt.Errorf(`value '%v' must not be an empty string`, this.FirstName))
	}
	if this.SecondName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SecondName", fmt.Errorf(`value '%v' must not be an empty string`, this.SecondName))
	}
	if this.VehiclePassport == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("VehiclePassport", fmt.Errorf(`value '%v' must not be an empty string`, this.VehiclePassport))
	}
	return nil
}
func (this *SetCarDetail) Validate() error {
	if this.Make == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Make", fmt.Errorf(`value '%v' must not be an empty string`, this.Make))
	}
	return nil
}
func (this *CarView) Validate() error {
	if this.Car != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Car); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Car", err)
		}
	}
	if this.Owners != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Owners); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Owners", err)
		}
	}
	if this.Details != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Details); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Details", err)
		}
	}
	return nil
}
func (this *Car) Validate() error {
	if len(this.Id) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Id))
	}
	if this.Make == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Make", fmt.Errorf(`value '%v' must not be an empty string`, this.Make))
	}
	if this.Model == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Model", fmt.Errorf(`value '%v' must not be an empty string`, this.Model))
	}
	if this.Colour == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Colour", fmt.Errorf(`value '%v' must not be an empty string`, this.Colour))
	}
	if !(this.Number > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Number", fmt.Errorf(`value '%v' must be greater than '0'`, this.Number))
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *CarOwner) Validate() error {
	if len(this.CarId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("CarId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.CarId))
	}
	if this.FirstName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("FirstName", fmt.Errorf(`value '%v' must not be an empty string`, this.FirstName))
	}
	if this.SecondName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SecondName", fmt.Errorf(`value '%v' must not be an empty string`, this.SecondName))
	}
	if this.VehiclePassport == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("VehiclePassport", fmt.Errorf(`value '%v' must not be an empty string`, this.VehiclePassport))
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *CarDetail) Validate() error {
	if len(this.CarId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("CarId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.CarId))
	}
	if this.Make == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Make", fmt.Errorf(`value '%v' must not be an empty string`, this.Make))
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *CarId) Validate() error {
	if len(this.Id) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Id))
	}
	return nil
}
func (this *Cars) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *UpdateCarOwnersRequest) Validate() error {
	if len(this.CarId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("CarId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.CarId))
	}
	if len(this.Owners) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Owners", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Owners))
	}
	for _, item := range this.Owners {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Owners", err)
			}
		}
	}
	return nil
}
func (this *CarOwnerId) Validate() error {
	if len(this.CarId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("CarId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.CarId))
	}
	if this.FirstName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("FirstName", fmt.Errorf(`value '%v' must not be an empty string`, this.FirstName))
	}
	if this.SecondName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SecondName", fmt.Errorf(`value '%v' must not be an empty string`, this.SecondName))
	}
	return nil
}
func (this *CarOwners) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *UpdateCarDetailsRequest) Validate() error {
	if len(this.CarId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("CarId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.CarId))
	}
	if len(this.Details) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Details", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Details))
	}
	for _, item := range this.Details {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Details", err)
			}
		}
	}
	return nil
}
func (this *CarDetailId) Validate() error {
	if len(this.CarId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("CarId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.CarId))
	}
	return nil
}
func (this *CarDetails) Validate() error {
	for _, item := range this.Items {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Items", err)
			}
		}
	}
	return nil
}
func (this *MakerCreated) Validate() error {
	return nil
}
func (this *MakerDeleted) Validate() error {
	return nil
}
func (this *CarCreated) Validate() error {
	return nil
}
func (this *CarDeleted) Validate() error {
	if this.Owners != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Owners); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Owners", err)
		}
	}
	if this.Details != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Details); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Details", err)
		}
	}
	return nil
}
func (this *CarUpdated) Validate() error {
	return nil
}
func (this *CarOwnersUpdated) Validate() error {
	if this.Owners != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Owners); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Owners", err)
		}
	}
	return nil
}
func (this *CarOwnerDeleted) Validate() error {
	if this.Owner != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Owner); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Owner", err)
		}
	}
	return nil
}
func (this *CarDetailsUpdated) Validate() error {
	if this.Details != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Details); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Details", err)
		}
	}
	return nil
}
func (this *CarDetailDeleted) Validate() error {
	if this.Detail != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Detail); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Detail", err)
		}
	}
	return nil
}
