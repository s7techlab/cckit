// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: fabcar/fabcar.proto

package fabcar

import (
	context "context"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Dictionaries
type DetailType int32

const (
	DetailType_WHEELS  DetailType = 0
	DetailType_BATTERY DetailType = 1
)

// Enum value maps for DetailType.
var (
	DetailType_name = map[int32]string{
		0: "WHEELS",
		1: "BATTERY",
	}
	DetailType_value = map[string]int32{
		"WHEELS":  0,
		"BATTERY": 1,
	}
)

func (x DetailType) Enum() *DetailType {
	p := new(DetailType)
	*p = x
	return p
}

func (x DetailType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DetailType) Descriptor() protoreflect.EnumDescriptor {
	return file_fabcar_fabcar_proto_enumTypes[0].Descriptor()
}

func (DetailType) Type() protoreflect.EnumType {
	return &file_fabcar_fabcar_proto_enumTypes[0]
}

func (x DetailType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DetailType.Descriptor instead.
func (DetailType) EnumDescriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{0}
}

// Entities
type CreateMakerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Country        string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FoundationYear uint64 `protobuf:"varint,3,opt,name=foundation_year,json=foundationYear,proto3" json:"foundation_year,omitempty"` // in 1886 was founded the oldest automaker - Mercedes-Benz
}

func (x *CreateMakerRequest) Reset() {
	*x = CreateMakerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMakerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMakerRequest) ProtoMessage() {}

func (x *CreateMakerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMakerRequest.ProtoReflect.Descriptor instead.
func (*CreateMakerRequest) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{0}
}

func (x *CreateMakerRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateMakerRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateMakerRequest) GetFoundationYear() uint64 {
	if x != nil {
		return x.FoundationYear
	}
	return 0
}

type MakerName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *MakerName) Reset() {
	*x = MakerName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakerName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakerName) ProtoMessage() {}

func (x *MakerName) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakerName.ProtoReflect.Descriptor instead.
func (*MakerName) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{1}
}

func (x *MakerName) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Maker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Country        string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FoundationYear uint64 `protobuf:"varint,3,opt,name=foundation_year,json=foundationYear,proto3" json:"foundation_year,omitempty"`
}

func (x *Maker) Reset() {
	*x = Maker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Maker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Maker) ProtoMessage() {}

func (x *Maker) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Maker.ProtoReflect.Descriptor instead.
func (*Maker) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{2}
}

func (x *Maker) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Maker) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Maker) GetFoundationYear() uint64 {
	if x != nil {
		return x.FoundationYear
	}
	return 0
}

type Makers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Maker `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Makers) Reset() {
	*x = Makers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Makers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Makers) ProtoMessage() {}

func (x *Makers) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Makers.ProtoReflect.Descriptor instead.
func (*Makers) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{3}
}

func (x *Makers) GetItems() []*Maker {
	if x != nil {
		return x.Items
	}
	return nil
}

type CreateCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Make    string          `protobuf:"bytes,1,opt,name=make,proto3" json:"make,omitempty"`
	Model   string          `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	Colour  string          `protobuf:"bytes,3,opt,name=colour,proto3" json:"colour,omitempty"`
	Number  uint64          `protobuf:"varint,4,opt,name=number,proto3" json:"number,omitempty"`
	Owners  []*SetCarOwner  `protobuf:"bytes,5,rep,name=owners,proto3" json:"owners,omitempty"`
	Details []*SetCarDetail `protobuf:"bytes,6,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *CreateCarRequest) Reset() {
	*x = CreateCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCarRequest) ProtoMessage() {}

func (x *CreateCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCarRequest.ProtoReflect.Descriptor instead.
func (*CreateCarRequest) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{4}
}

func (x *CreateCarRequest) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *CreateCarRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CreateCarRequest) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *CreateCarRequest) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CreateCarRequest) GetOwners() []*SetCarOwner {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *CreateCarRequest) GetDetails() []*SetCarDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

type UpdateCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      []string        `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Color   string          `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
	Owners  []*SetCarOwner  `protobuf:"bytes,3,rep,name=owners,proto3" json:"owners,omitempty"`
	Details []*SetCarDetail `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateCarRequest) Reset() {
	*x = UpdateCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarRequest) ProtoMessage() {}

func (x *UpdateCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarRequest.ProtoReflect.Descriptor instead.
func (*UpdateCarRequest) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCarRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *UpdateCarRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *UpdateCarRequest) GetOwners() []*SetCarOwner {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *UpdateCarRequest) GetDetails() []*SetCarDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

type SetCarOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstName       string `protobuf:"bytes,1,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName      string `protobuf:"bytes,2,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	VehiclePassport string `protobuf:"bytes,3,opt,name=vehicle_passport,json=vehiclePassport,proto3" json:"vehicle_passport,omitempty"`
}

func (x *SetCarOwner) Reset() {
	*x = SetCarOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCarOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCarOwner) ProtoMessage() {}

func (x *SetCarOwner) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCarOwner.ProtoReflect.Descriptor instead.
func (*SetCarOwner) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{6}
}

func (x *SetCarOwner) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *SetCarOwner) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *SetCarOwner) GetVehiclePassport() string {
	if x != nil {
		return x.VehiclePassport
	}
	return ""
}

type SetCarDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type DetailType `protobuf:"varint,1,opt,name=type,proto3,enum=examples.fabcar.DetailType" json:"type,omitempty"`
	Make string     `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty"`
}

func (x *SetCarDetail) Reset() {
	*x = SetCarDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetCarDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetCarDetail) ProtoMessage() {}

func (x *SetCarDetail) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetCarDetail.ProtoReflect.Descriptor instead.
func (*SetCarDetail) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{7}
}

func (x *SetCarDetail) GetType() DetailType {
	if x != nil {
		return x.Type
	}
	return DetailType_WHEELS
}

func (x *SetCarDetail) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

type CarView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Car     *Car        `protobuf:"bytes,1,opt,name=car,proto3" json:"car,omitempty"`
	Owners  *CarOwners  `protobuf:"bytes,2,opt,name=owners,proto3" json:"owners,omitempty"`
	Details *CarDetails `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CarView) Reset() {
	*x = CarView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarView) ProtoMessage() {}

func (x *CarView) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarView.ProtoReflect.Descriptor instead.
func (*CarView) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{8}
}

func (x *CarView) GetCar() *Car {
	if x != nil {
		return x.Car
	}
	return nil
}

func (x *CarView) GetOwners() *CarOwners {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *CarView) GetDetails() *CarDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type Car struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []string               `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Make      string                 `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty"`
	Model     string                 `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Colour    string                 `protobuf:"bytes,4,opt,name=colour,proto3" json:"colour,omitempty"`
	Number    uint64                 `protobuf:"varint,5,opt,name=number,proto3" json:"number,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Car) Reset() {
	*x = Car{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Car) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Car) ProtoMessage() {}

func (x *Car) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Car.ProtoReflect.Descriptor instead.
func (*Car) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{9}
}

func (x *Car) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Car) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *Car) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Car) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *Car) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Car) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CarOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId           []string               `protobuf:"bytes,1,rep,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	FirstName       string                 `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName      string                 `protobuf:"bytes,3,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	VehiclePassport string                 `protobuf:"bytes,4,opt,name=vehicle_passport,json=vehiclePassport,proto3" json:"vehicle_passport,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CarOwner) Reset() {
	*x = CarOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarOwner) ProtoMessage() {}

func (x *CarOwner) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarOwner.ProtoReflect.Descriptor instead.
func (*CarOwner) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{10}
}

func (x *CarOwner) GetCarId() []string {
	if x != nil {
		return x.CarId
	}
	return nil
}

func (x *CarOwner) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CarOwner) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *CarOwner) GetVehiclePassport() string {
	if x != nil {
		return x.VehiclePassport
	}
	return ""
}

func (x *CarOwner) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CarDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId     []string               `protobuf:"bytes,1,rep,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	Type      DetailType             `protobuf:"varint,2,opt,name=type,proto3,enum=examples.fabcar.DetailType" json:"type,omitempty"`
	Make      string                 `protobuf:"bytes,3,opt,name=make,proto3" json:"make,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CarDetail) Reset() {
	*x = CarDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDetail) ProtoMessage() {}

func (x *CarDetail) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDetail.ProtoReflect.Descriptor instead.
func (*CarDetail) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{11}
}

func (x *CarDetail) GetCarId() []string {
	if x != nil {
		return x.CarId
	}
	return nil
}

func (x *CarDetail) GetType() DetailType {
	if x != nil {
		return x.Type
	}
	return DetailType_WHEELS
}

func (x *CarDetail) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *CarDetail) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CarId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *CarId) Reset() {
	*x = CarId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarId) ProtoMessage() {}

func (x *CarId) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarId.ProtoReflect.Descriptor instead.
func (*CarId) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{12}
}

func (x *CarId) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type Cars struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Car `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Cars) Reset() {
	*x = Cars{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cars) ProtoMessage() {}

func (x *Cars) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cars.ProtoReflect.Descriptor instead.
func (*Cars) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{13}
}

func (x *Cars) GetItems() []*Car {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateCarOwnersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId  []string       `protobuf:"bytes,1,rep,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	Owners []*SetCarOwner `protobuf:"bytes,2,rep,name=owners,proto3" json:"owners,omitempty"`
}

func (x *UpdateCarOwnersRequest) Reset() {
	*x = UpdateCarOwnersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarOwnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarOwnersRequest) ProtoMessage() {}

func (x *UpdateCarOwnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarOwnersRequest.ProtoReflect.Descriptor instead.
func (*UpdateCarOwnersRequest) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateCarOwnersRequest) GetCarId() []string {
	if x != nil {
		return x.CarId
	}
	return nil
}

func (x *UpdateCarOwnersRequest) GetOwners() []*SetCarOwner {
	if x != nil {
		return x.Owners
	}
	return nil
}

type CarOwnerId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId      []string `protobuf:"bytes,1,rep,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	FirstName  string   `protobuf:"bytes,2,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName string   `protobuf:"bytes,3,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
}

func (x *CarOwnerId) Reset() {
	*x = CarOwnerId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarOwnerId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarOwnerId) ProtoMessage() {}

func (x *CarOwnerId) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarOwnerId.ProtoReflect.Descriptor instead.
func (*CarOwnerId) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{15}
}

func (x *CarOwnerId) GetCarId() []string {
	if x != nil {
		return x.CarId
	}
	return nil
}

func (x *CarOwnerId) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CarOwnerId) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

type CarOwners struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CarOwner `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CarOwners) Reset() {
	*x = CarOwners{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarOwners) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarOwners) ProtoMessage() {}

func (x *CarOwners) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarOwners.ProtoReflect.Descriptor instead.
func (*CarOwners) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{16}
}

func (x *CarOwners) GetItems() []*CarOwner {
	if x != nil {
		return x.Items
	}
	return nil
}

type UpdateCarDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId   []string        `protobuf:"bytes,1,rep,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	Details []*SetCarDetail `protobuf:"bytes,2,rep,name=details,proto3" json:"details,omitempty"`
}

func (x *UpdateCarDetailsRequest) Reset() {
	*x = UpdateCarDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCarDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCarDetailsRequest) ProtoMessage() {}

func (x *UpdateCarDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCarDetailsRequest.ProtoReflect.Descriptor instead.
func (*UpdateCarDetailsRequest) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateCarDetailsRequest) GetCarId() []string {
	if x != nil {
		return x.CarId
	}
	return nil
}

func (x *UpdateCarDetailsRequest) GetDetails() []*SetCarDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

type CarDetailId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarId []string   `protobuf:"bytes,1,rep,name=car_id,json=carId,proto3" json:"car_id,omitempty"`
	Type  DetailType `protobuf:"varint,2,opt,name=type,proto3,enum=examples.fabcar.DetailType" json:"type,omitempty"`
}

func (x *CarDetailId) Reset() {
	*x = CarDetailId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDetailId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDetailId) ProtoMessage() {}

func (x *CarDetailId) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDetailId.ProtoReflect.Descriptor instead.
func (*CarDetailId) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{18}
}

func (x *CarDetailId) GetCarId() []string {
	if x != nil {
		return x.CarId
	}
	return nil
}

func (x *CarDetailId) GetType() DetailType {
	if x != nil {
		return x.Type
	}
	return DetailType_WHEELS
}

type CarDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*CarDetail `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CarDetails) Reset() {
	*x = CarDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDetails) ProtoMessage() {}

func (x *CarDetails) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDetails.ProtoReflect.Descriptor instead.
func (*CarDetails) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{19}
}

func (x *CarDetails) GetItems() []*CarDetail {
	if x != nil {
		return x.Items
	}
	return nil
}

// Events
type MakerCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Country        string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FoundationYear uint64 `protobuf:"varint,3,opt,name=foundation_year,json=foundationYear,proto3" json:"foundation_year,omitempty"`
}

func (x *MakerCreated) Reset() {
	*x = MakerCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakerCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakerCreated) ProtoMessage() {}

func (x *MakerCreated) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakerCreated.ProtoReflect.Descriptor instead.
func (*MakerCreated) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{20}
}

func (x *MakerCreated) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MakerCreated) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *MakerCreated) GetFoundationYear() uint64 {
	if x != nil {
		return x.FoundationYear
	}
	return 0
}

type MakerDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Country        string `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	FoundationYear uint64 `protobuf:"varint,3,opt,name=foundation_year,json=foundationYear,proto3" json:"foundation_year,omitempty"`
}

func (x *MakerDeleted) Reset() {
	*x = MakerDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MakerDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakerDeleted) ProtoMessage() {}

func (x *MakerDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakerDeleted.ProtoReflect.Descriptor instead.
func (*MakerDeleted) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{21}
}

func (x *MakerDeleted) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MakerDeleted) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *MakerDeleted) GetFoundationYear() uint64 {
	if x != nil {
		return x.FoundationYear
	}
	return 0
}

type CarCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Make   string   `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty"`
	Model  string   `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Colour string   `protobuf:"bytes,4,opt,name=colour,proto3" json:"colour,omitempty"`
	Number uint64   `protobuf:"varint,5,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *CarCreated) Reset() {
	*x = CarCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarCreated) ProtoMessage() {}

func (x *CarCreated) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarCreated.ProtoReflect.Descriptor instead.
func (*CarCreated) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{22}
}

func (x *CarCreated) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CarCreated) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *CarCreated) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CarCreated) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *CarCreated) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

type CarDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      []string    `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Make    string      `protobuf:"bytes,2,opt,name=make,proto3" json:"make,omitempty"`
	Model   string      `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
	Colour  string      `protobuf:"bytes,4,opt,name=colour,proto3" json:"colour,omitempty"`
	Number  uint64      `protobuf:"varint,5,opt,name=number,proto3" json:"number,omitempty"`
	Owners  *CarOwners  `protobuf:"bytes,6,opt,name=owners,proto3" json:"owners,omitempty"`
	Details *CarDetails `protobuf:"bytes,7,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CarDeleted) Reset() {
	*x = CarDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDeleted) ProtoMessage() {}

func (x *CarDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDeleted.ProtoReflect.Descriptor instead.
func (*CarDeleted) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{23}
}

func (x *CarDeleted) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CarDeleted) GetMake() string {
	if x != nil {
		return x.Make
	}
	return ""
}

func (x *CarDeleted) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *CarDeleted) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

func (x *CarDeleted) GetNumber() uint64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CarDeleted) GetOwners() *CarOwners {
	if x != nil {
		return x.Owners
	}
	return nil
}

func (x *CarDeleted) GetDetails() *CarDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type CarUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
	Colour string   `protobuf:"bytes,2,opt,name=colour,proto3" json:"colour,omitempty"`
}

func (x *CarUpdated) Reset() {
	*x = CarUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarUpdated) ProtoMessage() {}

func (x *CarUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarUpdated.ProtoReflect.Descriptor instead.
func (*CarUpdated) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{24}
}

func (x *CarUpdated) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CarUpdated) GetColour() string {
	if x != nil {
		return x.Colour
	}
	return ""
}

type CarOwnersUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owners *CarOwners `protobuf:"bytes,1,opt,name=owners,proto3" json:"owners,omitempty"`
}

func (x *CarOwnersUpdated) Reset() {
	*x = CarOwnersUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarOwnersUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarOwnersUpdated) ProtoMessage() {}

func (x *CarOwnersUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarOwnersUpdated.ProtoReflect.Descriptor instead.
func (*CarOwnersUpdated) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{25}
}

func (x *CarOwnersUpdated) GetOwners() *CarOwners {
	if x != nil {
		return x.Owners
	}
	return nil
}

type CarOwnerDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner *CarOwner `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *CarOwnerDeleted) Reset() {
	*x = CarOwnerDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarOwnerDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarOwnerDeleted) ProtoMessage() {}

func (x *CarOwnerDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarOwnerDeleted.ProtoReflect.Descriptor instead.
func (*CarOwnerDeleted) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{26}
}

func (x *CarOwnerDeleted) GetOwner() *CarOwner {
	if x != nil {
		return x.Owner
	}
	return nil
}

type CarDetailsUpdated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *CarDetails `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *CarDetailsUpdated) Reset() {
	*x = CarDetailsUpdated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDetailsUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDetailsUpdated) ProtoMessage() {}

func (x *CarDetailsUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDetailsUpdated.ProtoReflect.Descriptor instead.
func (*CarDetailsUpdated) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{27}
}

func (x *CarDetailsUpdated) GetDetails() *CarDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type CarDetailDeleted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Detail *CarDetail `protobuf:"bytes,1,opt,name=detail,proto3" json:"detail,omitempty"`
}

func (x *CarDetailDeleted) Reset() {
	*x = CarDetailDeleted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fabcar_fabcar_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CarDetailDeleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarDetailDeleted) ProtoMessage() {}

func (x *CarDetailDeleted) ProtoReflect() protoreflect.Message {
	mi := &file_fabcar_fabcar_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarDetailDeleted.ProtoReflect.Descriptor instead.
func (*CarDetailDeleted) Descriptor() ([]byte, []int) {
	return file_fabcar_fabcar_proto_rawDescGZIP(), []int{28}
}

func (x *CarDetailDeleted) GetDetail() *CarDetail {
	if x != nil {
		return x.Detail
	}
	return nil
}

var File_fabcar_fabcar_proto protoreflect.FileDescriptor

var file_fabcar_fabcar_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2b, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x84, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x0f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xe2,
	0xdf, 0x1f, 0x03, 0x10, 0xdd, 0x0e, 0x52, 0x0e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x22, 0x27, 0x0a, 0x09, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x5e, 0x0a, 0x05, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x22,
	0x36, 0x0a, 0x06, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x72,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x83, 0x02, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x04,
	0x6d, 0x61, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x58, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x06,
	0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x1e, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x3f, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x60, 0x01, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xb7, 0x01,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58,
	0x01, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x37,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x90, 0x01, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x58, 0x01, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x5b, 0x0a, 0x0c, 0x53, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x6d,
	0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58,
	0x01, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x07, 0x43, 0x61, 0x72, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x26, 0x0a, 0x03, 0x63, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x03, 0x63, 0x61, 0x72, 0x12, 0x32, 0x0a, 0x06, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61,
	0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x35, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x03, 0x43, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02,
	0x60, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6d, 0x61,
	0x6b, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x1e, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72,
	0x12, 0x1e, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x10, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe7, 0x01, 0x0a, 0x08,
	0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01,
	0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x58, 0x01, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27,
	0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x10, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0f, 0x76, 0x65, 0x68, 0x69, 0x63,
	0x6c, 0x65, 0x50, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63,
	0x61, 0x72, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x1f, 0x0a, 0x05, 0x43, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x04, 0x43,
	0x61, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61,
	0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x75, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x06, 0x63, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60,
	0x01, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x06,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x7b, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x60, 0x01, 0x52, 0x05, 0x63, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0b, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2e, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0x79, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x06,
	0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x60, 0x01, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x60, 0x01, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5d, 0x0a, 0x0b,
	0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x06, 0x63,
	0x61, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x60, 0x01, 0x52, 0x05, 0x63, 0x61, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3e, 0x0a, 0x0a, 0x43,
	0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x65, 0x0a, 0x0c, 0x4d,
	0x61, 0x6b, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x75,
	0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65,
	0x61, 0x72, 0x22, 0x65, 0x0a, 0x0c, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x27, 0x0a, 0x0f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x79,
	0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x66, 0x6f, 0x75, 0x6e, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x22, 0x76, 0x0a, 0x0a, 0x43, 0x61, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x22, 0xe1, 0x01, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x61, 0x6b, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x6f, 0x75, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f,
	0x75, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x06, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x35,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x34, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x75, 0x72, 0x22, 0x46, 0x0a, 0x10, 0x43,
	0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x32, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2e, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x06, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x22, 0x42, 0x0a, 0x0f, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x4a, 0x0a, 0x11, 0x43, 0x61, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x35, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e,
	0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x46, 0x0a, 0x10, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2a, 0x25, 0x0a, 0x0a, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x48, 0x45,
	0x45, 0x4c, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x41, 0x54, 0x54, 0x45, 0x52, 0x59,
	0x10, 0x01, 0x32, 0x91, 0x0f, 0x0a, 0x0d, 0x46, 0x61, 0x62, 0x43, 0x61, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x6b, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66,
	0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x72,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2f, 0x6d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x60, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x4d, 0x61, 0x6b,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x22, 0x1d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f,
	0x6d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x5d, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x4d, 0x61, 0x6b, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x6d,
	0x61, 0x6b, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x55, 0x0a, 0x0a,
	0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x17, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61,
	0x62, 0x63, 0x61, 0x72, 0x2e, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x73, 0x22, 0x16, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x6d, 0x61, 0x6b,
	0x65, 0x72, 0x73, 0x12, 0x61, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72,
	0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66,
	0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x56, 0x69, 0x65, 0x77, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x63,
	0x61, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x72, 0x12, 0x21, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66,
	0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x56, 0x69, 0x65, 0x77,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x58,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x12, 0x16, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61,
	0x72, 0x49, 0x64, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66,
	0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x56, 0x69, 0x65, 0x77, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x63,
	0x61, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x51, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x43,
	0x61, 0x72, 0x12, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61,
	0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x49, 0x64, 0x1a, 0x14, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x5e, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x43, 0x61, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x49,
	0x64, 0x1a, 0x18, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62,
	0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x56, 0x69, 0x65, 0x77, 0x22, 0x1e, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x61, 0x72,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x76, 0x69, 0x65, 0x77, 0x12, 0x4f, 0x0a, 0x08, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x15, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2e, 0x43, 0x61, 0x72, 0x73, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c,
	0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x12, 0x7c, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12,
	0x27, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61,
	0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x1a, 0x1c, 0x2f, 0x66,
	0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x0e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x2e,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e,
	0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x19, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x3f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x2a, 0x37, 0x2f,
	0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x72,
	0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x7b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x61,
	0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x49, 0x64, 0x1a, 0x19, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66,
	0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x3f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x39, 0x12, 0x37, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f,
	0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x7d, 0x2f, 0x7b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12,
	0x65, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x16, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63,
	0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x66,
	0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x80, 0x01, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28, 0x2e, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73,
	0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x1a, 0x1d, 0x2f, 0x66, 0x61, 0x62,
	0x63, 0x61, 0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x79, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x2e, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43,
	0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x65, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x2a, 0x24,
	0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x61,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2f, 0x7b, 0x74,
	0x79, 0x70, 0x65, 0x7d, 0x12, 0x76, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e,
	0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x64, 0x1a, 0x1a, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61,
	0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x2c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2f,
	0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x2f, 0x7b, 0x74, 0x79, 0x70, 0x65, 0x7d, 0x12, 0x68, 0x0a, 0x0e,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16,
	0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72,
	0x2e, 0x43, 0x61, 0x72, 0x49, 0x64, 0x1a, 0x1b, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x2e, 0x66, 0x61, 0x62, 0x63, 0x61, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x66, 0x61,
	0x62, 0x63, 0x61, 0x72, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x37, 0x74, 0x65, 0x63, 0x68, 0x6c, 0x61, 0x62, 0x2f, 0x63,
	0x63, 0x6b, 0x69, 0x74, 0x2f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x66, 0x61,
	0x62, 0x63, 0x61, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fabcar_fabcar_proto_rawDescOnce sync.Once
	file_fabcar_fabcar_proto_rawDescData = file_fabcar_fabcar_proto_rawDesc
)

func file_fabcar_fabcar_proto_rawDescGZIP() []byte {
	file_fabcar_fabcar_proto_rawDescOnce.Do(func() {
		file_fabcar_fabcar_proto_rawDescData = protoimpl.X.CompressGZIP(file_fabcar_fabcar_proto_rawDescData)
	})
	return file_fabcar_fabcar_proto_rawDescData
}

var file_fabcar_fabcar_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fabcar_fabcar_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_fabcar_fabcar_proto_goTypes = []interface{}{
	(DetailType)(0),                 // 0: examples.fabcar.DetailType
	(*CreateMakerRequest)(nil),      // 1: examples.fabcar.CreateMakerRequest
	(*MakerName)(nil),               // 2: examples.fabcar.MakerName
	(*Maker)(nil),                   // 3: examples.fabcar.Maker
	(*Makers)(nil),                  // 4: examples.fabcar.Makers
	(*CreateCarRequest)(nil),        // 5: examples.fabcar.CreateCarRequest
	(*UpdateCarRequest)(nil),        // 6: examples.fabcar.UpdateCarRequest
	(*SetCarOwner)(nil),             // 7: examples.fabcar.SetCarOwner
	(*SetCarDetail)(nil),            // 8: examples.fabcar.SetCarDetail
	(*CarView)(nil),                 // 9: examples.fabcar.CarView
	(*Car)(nil),                     // 10: examples.fabcar.Car
	(*CarOwner)(nil),                // 11: examples.fabcar.CarOwner
	(*CarDetail)(nil),               // 12: examples.fabcar.CarDetail
	(*CarId)(nil),                   // 13: examples.fabcar.CarId
	(*Cars)(nil),                    // 14: examples.fabcar.Cars
	(*UpdateCarOwnersRequest)(nil),  // 15: examples.fabcar.UpdateCarOwnersRequest
	(*CarOwnerId)(nil),              // 16: examples.fabcar.CarOwnerId
	(*CarOwners)(nil),               // 17: examples.fabcar.CarOwners
	(*UpdateCarDetailsRequest)(nil), // 18: examples.fabcar.UpdateCarDetailsRequest
	(*CarDetailId)(nil),             // 19: examples.fabcar.CarDetailId
	(*CarDetails)(nil),              // 20: examples.fabcar.CarDetails
	(*MakerCreated)(nil),            // 21: examples.fabcar.MakerCreated
	(*MakerDeleted)(nil),            // 22: examples.fabcar.MakerDeleted
	(*CarCreated)(nil),              // 23: examples.fabcar.CarCreated
	(*CarDeleted)(nil),              // 24: examples.fabcar.CarDeleted
	(*CarUpdated)(nil),              // 25: examples.fabcar.CarUpdated
	(*CarOwnersUpdated)(nil),        // 26: examples.fabcar.CarOwnersUpdated
	(*CarOwnerDeleted)(nil),         // 27: examples.fabcar.CarOwnerDeleted
	(*CarDetailsUpdated)(nil),       // 28: examples.fabcar.CarDetailsUpdated
	(*CarDetailDeleted)(nil),        // 29: examples.fabcar.CarDetailDeleted
	(*timestamppb.Timestamp)(nil),   // 30: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),           // 31: google.protobuf.Empty
}
var file_fabcar_fabcar_proto_depIdxs = []int32{
	3,  // 0: examples.fabcar.Makers.items:type_name -> examples.fabcar.Maker
	7,  // 1: examples.fabcar.CreateCarRequest.owners:type_name -> examples.fabcar.SetCarOwner
	8,  // 2: examples.fabcar.CreateCarRequest.details:type_name -> examples.fabcar.SetCarDetail
	7,  // 3: examples.fabcar.UpdateCarRequest.owners:type_name -> examples.fabcar.SetCarOwner
	8,  // 4: examples.fabcar.UpdateCarRequest.details:type_name -> examples.fabcar.SetCarDetail
	0,  // 5: examples.fabcar.SetCarDetail.type:type_name -> examples.fabcar.DetailType
	10, // 6: examples.fabcar.CarView.car:type_name -> examples.fabcar.Car
	17, // 7: examples.fabcar.CarView.owners:type_name -> examples.fabcar.CarOwners
	20, // 8: examples.fabcar.CarView.details:type_name -> examples.fabcar.CarDetails
	30, // 9: examples.fabcar.Car.updated_at:type_name -> google.protobuf.Timestamp
	30, // 10: examples.fabcar.CarOwner.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 11: examples.fabcar.CarDetail.type:type_name -> examples.fabcar.DetailType
	30, // 12: examples.fabcar.CarDetail.updated_at:type_name -> google.protobuf.Timestamp
	10, // 13: examples.fabcar.Cars.items:type_name -> examples.fabcar.Car
	7,  // 14: examples.fabcar.UpdateCarOwnersRequest.owners:type_name -> examples.fabcar.SetCarOwner
	11, // 15: examples.fabcar.CarOwners.items:type_name -> examples.fabcar.CarOwner
	8,  // 16: examples.fabcar.UpdateCarDetailsRequest.details:type_name -> examples.fabcar.SetCarDetail
	0,  // 17: examples.fabcar.CarDetailId.type:type_name -> examples.fabcar.DetailType
	12, // 18: examples.fabcar.CarDetails.items:type_name -> examples.fabcar.CarDetail
	17, // 19: examples.fabcar.CarDeleted.owners:type_name -> examples.fabcar.CarOwners
	20, // 20: examples.fabcar.CarDeleted.details:type_name -> examples.fabcar.CarDetails
	17, // 21: examples.fabcar.CarOwnersUpdated.owners:type_name -> examples.fabcar.CarOwners
	11, // 22: examples.fabcar.CarOwnerDeleted.owner:type_name -> examples.fabcar.CarOwner
	20, // 23: examples.fabcar.CarDetailsUpdated.details:type_name -> examples.fabcar.CarDetails
	12, // 24: examples.fabcar.CarDetailDeleted.detail:type_name -> examples.fabcar.CarDetail
	1,  // 25: examples.fabcar.FabCarService.CreateMaker:input_type -> examples.fabcar.CreateMakerRequest
	2,  // 26: examples.fabcar.FabCarService.DeleteMaker:input_type -> examples.fabcar.MakerName
	2,  // 27: examples.fabcar.FabCarService.GetMaker:input_type -> examples.fabcar.MakerName
	31, // 28: examples.fabcar.FabCarService.ListMakers:input_type -> google.protobuf.Empty
	5,  // 29: examples.fabcar.FabCarService.CreateCar:input_type -> examples.fabcar.CreateCarRequest
	6,  // 30: examples.fabcar.FabCarService.UpdateCar:input_type -> examples.fabcar.UpdateCarRequest
	13, // 31: examples.fabcar.FabCarService.DeleteCar:input_type -> examples.fabcar.CarId
	13, // 32: examples.fabcar.FabCarService.GetCar:input_type -> examples.fabcar.CarId
	13, // 33: examples.fabcar.FabCarService.GetCarView:input_type -> examples.fabcar.CarId
	31, // 34: examples.fabcar.FabCarService.ListCars:input_type -> google.protobuf.Empty
	15, // 35: examples.fabcar.FabCarService.UpdateCarOwners:input_type -> examples.fabcar.UpdateCarOwnersRequest
	16, // 36: examples.fabcar.FabCarService.DeleteCarOwner:input_type -> examples.fabcar.CarOwnerId
	16, // 37: examples.fabcar.FabCarService.GetCarOwner:input_type -> examples.fabcar.CarOwnerId
	13, // 38: examples.fabcar.FabCarService.ListCarOwners:input_type -> examples.fabcar.CarId
	18, // 39: examples.fabcar.FabCarService.UpdateCarDetails:input_type -> examples.fabcar.UpdateCarDetailsRequest
	19, // 40: examples.fabcar.FabCarService.DeleteCarDetail:input_type -> examples.fabcar.CarDetailId
	19, // 41: examples.fabcar.FabCarService.GetCarDetail:input_type -> examples.fabcar.CarDetailId
	13, // 42: examples.fabcar.FabCarService.ListCarDetails:input_type -> examples.fabcar.CarId
	3,  // 43: examples.fabcar.FabCarService.CreateMaker:output_type -> examples.fabcar.Maker
	3,  // 44: examples.fabcar.FabCarService.DeleteMaker:output_type -> examples.fabcar.Maker
	3,  // 45: examples.fabcar.FabCarService.GetMaker:output_type -> examples.fabcar.Maker
	4,  // 46: examples.fabcar.FabCarService.ListMakers:output_type -> examples.fabcar.Makers
	9,  // 47: examples.fabcar.FabCarService.CreateCar:output_type -> examples.fabcar.CarView
	9,  // 48: examples.fabcar.FabCarService.UpdateCar:output_type -> examples.fabcar.CarView
	9,  // 49: examples.fabcar.FabCarService.DeleteCar:output_type -> examples.fabcar.CarView
	10, // 50: examples.fabcar.FabCarService.GetCar:output_type -> examples.fabcar.Car
	9,  // 51: examples.fabcar.FabCarService.GetCarView:output_type -> examples.fabcar.CarView
	14, // 52: examples.fabcar.FabCarService.ListCars:output_type -> examples.fabcar.Cars
	17, // 53: examples.fabcar.FabCarService.UpdateCarOwners:output_type -> examples.fabcar.CarOwners
	11, // 54: examples.fabcar.FabCarService.DeleteCarOwner:output_type -> examples.fabcar.CarOwner
	11, // 55: examples.fabcar.FabCarService.GetCarOwner:output_type -> examples.fabcar.CarOwner
	17, // 56: examples.fabcar.FabCarService.ListCarOwners:output_type -> examples.fabcar.CarOwners
	20, // 57: examples.fabcar.FabCarService.UpdateCarDetails:output_type -> examples.fabcar.CarDetails
	12, // 58: examples.fabcar.FabCarService.DeleteCarDetail:output_type -> examples.fabcar.CarDetail
	12, // 59: examples.fabcar.FabCarService.GetCarDetail:output_type -> examples.fabcar.CarDetail
	20, // 60: examples.fabcar.FabCarService.ListCarDetails:output_type -> examples.fabcar.CarDetails
	43, // [43:61] is the sub-list for method output_type
	25, // [25:43] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_fabcar_fabcar_proto_init() }
func file_fabcar_fabcar_proto_init() {
	if File_fabcar_fabcar_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fabcar_fabcar_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMakerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakerName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Maker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Makers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCarOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetCarDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Car); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cars); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarOwnersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarOwnerId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarOwners); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCarDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDetailId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakerCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MakerDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarOwnersUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarOwnerDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDetailsUpdated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fabcar_fabcar_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CarDetailDeleted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fabcar_fabcar_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fabcar_fabcar_proto_goTypes,
		DependencyIndexes: file_fabcar_fabcar_proto_depIdxs,
		EnumInfos:         file_fabcar_fabcar_proto_enumTypes,
		MessageInfos:      file_fabcar_fabcar_proto_msgTypes,
	}.Build()
	File_fabcar_fabcar_proto = out.File
	file_fabcar_fabcar_proto_rawDesc = nil
	file_fabcar_fabcar_proto_goTypes = nil
	file_fabcar_fabcar_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FabCarServiceClient is the client API for FabCarService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FabCarServiceClient interface {
	CreateMaker(ctx context.Context, in *CreateMakerRequest, opts ...grpc.CallOption) (*Maker, error)
	DeleteMaker(ctx context.Context, in *MakerName, opts ...grpc.CallOption) (*Maker, error)
	GetMaker(ctx context.Context, in *MakerName, opts ...grpc.CallOption) (*Maker, error)
	ListMakers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Makers, error)
	CreateCar(ctx context.Context, in *CreateCarRequest, opts ...grpc.CallOption) (*CarView, error)
	UpdateCar(ctx context.Context, in *UpdateCarRequest, opts ...grpc.CallOption) (*CarView, error)
	DeleteCar(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*CarView, error)
	GetCar(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*Car, error)
	GetCarView(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*CarView, error)
	ListCars(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Cars, error)
	UpdateCarOwners(ctx context.Context, in *UpdateCarOwnersRequest, opts ...grpc.CallOption) (*CarOwners, error)
	DeleteCarOwner(ctx context.Context, in *CarOwnerId, opts ...grpc.CallOption) (*CarOwner, error)
	GetCarOwner(ctx context.Context, in *CarOwnerId, opts ...grpc.CallOption) (*CarOwner, error)
	ListCarOwners(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*CarOwners, error)
	UpdateCarDetails(ctx context.Context, in *UpdateCarDetailsRequest, opts ...grpc.CallOption) (*CarDetails, error)
	DeleteCarDetail(ctx context.Context, in *CarDetailId, opts ...grpc.CallOption) (*CarDetail, error)
	GetCarDetail(ctx context.Context, in *CarDetailId, opts ...grpc.CallOption) (*CarDetail, error)
	ListCarDetails(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*CarDetails, error)
}

type fabCarServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFabCarServiceClient(cc grpc.ClientConnInterface) FabCarServiceClient {
	return &fabCarServiceClient{cc}
}

func (c *fabCarServiceClient) CreateMaker(ctx context.Context, in *CreateMakerRequest, opts ...grpc.CallOption) (*Maker, error) {
	out := new(Maker)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/CreateMaker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) DeleteMaker(ctx context.Context, in *MakerName, opts ...grpc.CallOption) (*Maker, error) {
	out := new(Maker)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/DeleteMaker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) GetMaker(ctx context.Context, in *MakerName, opts ...grpc.CallOption) (*Maker, error) {
	out := new(Maker)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/GetMaker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) ListMakers(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Makers, error) {
	out := new(Makers)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/ListMakers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) CreateCar(ctx context.Context, in *CreateCarRequest, opts ...grpc.CallOption) (*CarView, error) {
	out := new(CarView)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/CreateCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) UpdateCar(ctx context.Context, in *UpdateCarRequest, opts ...grpc.CallOption) (*CarView, error) {
	out := new(CarView)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/UpdateCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) DeleteCar(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*CarView, error) {
	out := new(CarView)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/DeleteCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) GetCar(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*Car, error) {
	out := new(Car)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/GetCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) GetCarView(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*CarView, error) {
	out := new(CarView)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/GetCarView", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) ListCars(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*Cars, error) {
	out := new(Cars)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/ListCars", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) UpdateCarOwners(ctx context.Context, in *UpdateCarOwnersRequest, opts ...grpc.CallOption) (*CarOwners, error) {
	out := new(CarOwners)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/UpdateCarOwners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) DeleteCarOwner(ctx context.Context, in *CarOwnerId, opts ...grpc.CallOption) (*CarOwner, error) {
	out := new(CarOwner)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/DeleteCarOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) GetCarOwner(ctx context.Context, in *CarOwnerId, opts ...grpc.CallOption) (*CarOwner, error) {
	out := new(CarOwner)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/GetCarOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) ListCarOwners(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*CarOwners, error) {
	out := new(CarOwners)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/ListCarOwners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) UpdateCarDetails(ctx context.Context, in *UpdateCarDetailsRequest, opts ...grpc.CallOption) (*CarDetails, error) {
	out := new(CarDetails)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/UpdateCarDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) DeleteCarDetail(ctx context.Context, in *CarDetailId, opts ...grpc.CallOption) (*CarDetail, error) {
	out := new(CarDetail)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/DeleteCarDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) GetCarDetail(ctx context.Context, in *CarDetailId, opts ...grpc.CallOption) (*CarDetail, error) {
	out := new(CarDetail)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/GetCarDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *fabCarServiceClient) ListCarDetails(ctx context.Context, in *CarId, opts ...grpc.CallOption) (*CarDetails, error) {
	out := new(CarDetails)
	err := c.cc.Invoke(ctx, "/examples.fabcar.FabCarService/ListCarDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FabCarServiceServer is the server API for FabCarService service.
type FabCarServiceServer interface {
	CreateMaker(context.Context, *CreateMakerRequest) (*Maker, error)
	DeleteMaker(context.Context, *MakerName) (*Maker, error)
	GetMaker(context.Context, *MakerName) (*Maker, error)
	ListMakers(context.Context, *emptypb.Empty) (*Makers, error)
	CreateCar(context.Context, *CreateCarRequest) (*CarView, error)
	UpdateCar(context.Context, *UpdateCarRequest) (*CarView, error)
	DeleteCar(context.Context, *CarId) (*CarView, error)
	GetCar(context.Context, *CarId) (*Car, error)
	GetCarView(context.Context, *CarId) (*CarView, error)
	ListCars(context.Context, *emptypb.Empty) (*Cars, error)
	UpdateCarOwners(context.Context, *UpdateCarOwnersRequest) (*CarOwners, error)
	DeleteCarOwner(context.Context, *CarOwnerId) (*CarOwner, error)
	GetCarOwner(context.Context, *CarOwnerId) (*CarOwner, error)
	ListCarOwners(context.Context, *CarId) (*CarOwners, error)
	UpdateCarDetails(context.Context, *UpdateCarDetailsRequest) (*CarDetails, error)
	DeleteCarDetail(context.Context, *CarDetailId) (*CarDetail, error)
	GetCarDetail(context.Context, *CarDetailId) (*CarDetail, error)
	ListCarDetails(context.Context, *CarId) (*CarDetails, error)
}

// UnimplementedFabCarServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFabCarServiceServer struct {
}

func (*UnimplementedFabCarServiceServer) CreateMaker(context.Context, *CreateMakerRequest) (*Maker, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMaker not implemented")
}
func (*UnimplementedFabCarServiceServer) DeleteMaker(context.Context, *MakerName) (*Maker, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMaker not implemented")
}
func (*UnimplementedFabCarServiceServer) GetMaker(context.Context, *MakerName) (*Maker, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMaker not implemented")
}
func (*UnimplementedFabCarServiceServer) ListMakers(context.Context, *emptypb.Empty) (*Makers, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListMakers not implemented")
}
func (*UnimplementedFabCarServiceServer) CreateCar(context.Context, *CreateCarRequest) (*CarView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCar not implemented")
}
func (*UnimplementedFabCarServiceServer) UpdateCar(context.Context, *UpdateCarRequest) (*CarView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCar not implemented")
}
func (*UnimplementedFabCarServiceServer) DeleteCar(context.Context, *CarId) (*CarView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCar not implemented")
}
func (*UnimplementedFabCarServiceServer) GetCar(context.Context, *CarId) (*Car, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCar not implemented")
}
func (*UnimplementedFabCarServiceServer) GetCarView(context.Context, *CarId) (*CarView, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCarView not implemented")
}
func (*UnimplementedFabCarServiceServer) ListCars(context.Context, *emptypb.Empty) (*Cars, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCars not implemented")
}
func (*UnimplementedFabCarServiceServer) UpdateCarOwners(context.Context, *UpdateCarOwnersRequest) (*CarOwners, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCarOwners not implemented")
}
func (*UnimplementedFabCarServiceServer) DeleteCarOwner(context.Context, *CarOwnerId) (*CarOwner, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCarOwner not implemented")
}
func (*UnimplementedFabCarServiceServer) GetCarOwner(context.Context, *CarOwnerId) (*CarOwner, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCarOwner not implemented")
}
func (*UnimplementedFabCarServiceServer) ListCarOwners(context.Context, *CarId) (*CarOwners, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCarOwners not implemented")
}
func (*UnimplementedFabCarServiceServer) UpdateCarDetails(context.Context, *UpdateCarDetailsRequest) (*CarDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCarDetails not implemented")
}
func (*UnimplementedFabCarServiceServer) DeleteCarDetail(context.Context, *CarDetailId) (*CarDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCarDetail not implemented")
}
func (*UnimplementedFabCarServiceServer) GetCarDetail(context.Context, *CarDetailId) (*CarDetail, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCarDetail not implemented")
}
func (*UnimplementedFabCarServiceServer) ListCarDetails(context.Context, *CarId) (*CarDetails, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCarDetails not implemented")
}

func RegisterFabCarServiceServer(s *grpc.Server, srv FabCarServiceServer) {
	s.RegisterService(&_FabCarService_serviceDesc, srv)
}

func _FabCarService_CreateMaker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMakerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).CreateMaker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/CreateMaker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).CreateMaker(ctx, req.(*CreateMakerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_DeleteMaker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakerName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).DeleteMaker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/DeleteMaker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).DeleteMaker(ctx, req.(*MakerName))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_GetMaker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakerName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).GetMaker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/GetMaker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).GetMaker(ctx, req.(*MakerName))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_ListMakers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).ListMakers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/ListMakers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).ListMakers(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_CreateCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).CreateCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/CreateCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).CreateCar(ctx, req.(*CreateCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_UpdateCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).UpdateCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/UpdateCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).UpdateCar(ctx, req.(*UpdateCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_DeleteCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).DeleteCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/DeleteCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).DeleteCar(ctx, req.(*CarId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_GetCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).GetCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/GetCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).GetCar(ctx, req.(*CarId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_GetCarView_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).GetCarView(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/GetCarView",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).GetCarView(ctx, req.(*CarId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_ListCars_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).ListCars(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/ListCars",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).ListCars(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_UpdateCarOwners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCarOwnersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).UpdateCarOwners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/UpdateCarOwners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).UpdateCarOwners(ctx, req.(*UpdateCarOwnersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_DeleteCarOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarOwnerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).DeleteCarOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/DeleteCarOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).DeleteCarOwner(ctx, req.(*CarOwnerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_GetCarOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarOwnerId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).GetCarOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/GetCarOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).GetCarOwner(ctx, req.(*CarOwnerId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_ListCarOwners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).ListCarOwners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/ListCarOwners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).ListCarOwners(ctx, req.(*CarId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_UpdateCarDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCarDetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).UpdateCarDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/UpdateCarDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).UpdateCarDetails(ctx, req.(*UpdateCarDetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_DeleteCarDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarDetailId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).DeleteCarDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/DeleteCarDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).DeleteCarDetail(ctx, req.(*CarDetailId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_GetCarDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarDetailId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).GetCarDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/GetCarDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).GetCarDetail(ctx, req.(*CarDetailId))
	}
	return interceptor(ctx, in, info, handler)
}

func _FabCarService_ListCarDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FabCarServiceServer).ListCarDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/examples.fabcar.FabCarService/ListCarDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FabCarServiceServer).ListCarDetails(ctx, req.(*CarId))
	}
	return interceptor(ctx, in, info, handler)
}

var _FabCarService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "examples.fabcar.FabCarService",
	HandlerType: (*FabCarServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMaker",
			Handler:    _FabCarService_CreateMaker_Handler,
		},
		{
			MethodName: "DeleteMaker",
			Handler:    _FabCarService_DeleteMaker_Handler,
		},
		{
			MethodName: "GetMaker",
			Handler:    _FabCarService_GetMaker_Handler,
		},
		{
			MethodName: "ListMakers",
			Handler:    _FabCarService_ListMakers_Handler,
		},
		{
			MethodName: "CreateCar",
			Handler:    _FabCarService_CreateCar_Handler,
		},
		{
			MethodName: "UpdateCar",
			Handler:    _FabCarService_UpdateCar_Handler,
		},
		{
			MethodName: "DeleteCar",
			Handler:    _FabCarService_DeleteCar_Handler,
		},
		{
			MethodName: "GetCar",
			Handler:    _FabCarService_GetCar_Handler,
		},
		{
			MethodName: "GetCarView",
			Handler:    _FabCarService_GetCarView_Handler,
		},
		{
			MethodName: "ListCars",
			Handler:    _FabCarService_ListCars_Handler,
		},
		{
			MethodName: "UpdateCarOwners",
			Handler:    _FabCarService_UpdateCarOwners_Handler,
		},
		{
			MethodName: "DeleteCarOwner",
			Handler:    _FabCarService_DeleteCarOwner_Handler,
		},
		{
			MethodName: "GetCarOwner",
			Handler:    _FabCarService_GetCarOwner_Handler,
		},
		{
			MethodName: "ListCarOwners",
			Handler:    _FabCarService_ListCarOwners_Handler,
		},
		{
			MethodName: "UpdateCarDetails",
			Handler:    _FabCarService_UpdateCarDetails_Handler,
		},
		{
			MethodName: "DeleteCarDetail",
			Handler:    _FabCarService_DeleteCarDetail_Handler,
		},
		{
			MethodName: "GetCarDetail",
			Handler:    _FabCarService_GetCarDetail_Handler,
		},
		{
			MethodName: "ListCarDetails",
			Handler:    _FabCarService_ListCarDetails_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "fabcar/fabcar.proto",
}
