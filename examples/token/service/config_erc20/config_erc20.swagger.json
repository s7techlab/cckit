{
  "swagger": "2.0",
  "info": {
    "title": "token/service/config_erc20/config_erc20.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/decimals": {
      "get": {
        "summary": "Returns the number of decimals used to get its user representation.\nFor example, if decimals equals 2, a balance of 505 tokens should be displayed to a user as 5,05 (505 / 10 ** 2).",
        "operationId": "ConfigERC20Service_GetDecimals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/config_erc20DecimalsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ConfigERC20Service"
        ]
      }
    },
    "/name": {
      "get": {
        "summary": "Returns the name of the token.",
        "operationId": "ConfigERC20Service_GetName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/config_erc20NameResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ConfigERC20Service"
        ]
      }
    },
    "/symbol": {
      "get": {
        "summary": "Returns the symbol of the token, usually a shorter version of the name.",
        "operationId": "ConfigERC20Service_GetSymbol",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/config_erc20SymbolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ConfigERC20Service"
        ]
      }
    },
    "/total-supply": {
      "get": {
        "summary": "Returns the amount of tokens in existence.",
        "operationId": "ConfigERC20Service_GetTotalSupply",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/config_erc20TotalSupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "ConfigERC20Service"
        ]
      }
    }
  },
  "definitions": {
    "config_erc20DecimalsResponse": {
      "type": "object",
      "properties": {
        "decimals": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "config_erc20NameResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "config_erc20SymbolResponse": {
      "type": "object",
      "properties": {
        "symbol": {
          "type": "string"
        }
      }
    },
    "config_erc20TotalSupplyResponse": {
      "type": "object",
      "properties": {
        "total_supply": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
