syntax = "proto3";

option go_package = "github.com/s7techlab/cckit/examples/token/service/allowance";
package examples.erc20_service.service.allowance;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "mwitkow/go-proto-validators/validator.proto";

service AllowanceService {
  // Returns the remaining number of tokens that spender will be allowed to spend on behalf of owner through transfersender.
  // This is zero by default.
  rpc GetAllowance (AllowanceRequest) returns (Allowance) {
    option (google.api.http) = {
      get: "/allowance/{owner_address}/{spender_address}/{token}"
    };
  }

  // Sets amount as the allowance of spender over the caller’s tokens.
  // Emits an ApprovalEvent
  rpc Approve (ApproveRequest) returns (Allowance) {
    option (google.api.http) = {
      post: "/approve"
    };
  }
  // Moves amount tokens from sender to recipient using the allowance mechanism.
  // Amount is then deducted from the caller’s allowance.
  // Emits TransferEvent
  rpc TransferFrom (TransferFromRequest) returns (TransferFromResponse) {
    option (google.api.http) = {
      post: "/transfer-from"
    };
  }
}

message AllowanceRequest {
  string owner_address = 1 [(validator.field) = {string_not_empty : true}];
  string spender_address = 2 [(validator.field) = {string_not_empty : true}];
  string token = 3;
}

message ApproveRequest {
  string owner_address = 1 [(validator.field) = {string_not_empty : true}];
  string spender_address = 2 [(validator.field) = {string_not_empty : true}];
  uint64 amount = 3 [(validator.field) = {int_gt: 0}];
  string token = 4;
}

message TransferFromRequest {
  string owner_address = 1 [(validator.field) = {string_not_empty : true}];
  string recipient_address = 2 [(validator.field) = {string_not_empty : true}];
  uint64 amount = 3 [(validator.field) = {int_gt: 0}];
  string token = 4;
}

message TransferFromResponse {
  string owner_address = 1;
  string recipient_address = 2;
  string token = 3;
  uint64 amount = 4;
}

// Allowance identifier
message AllowanceId {
  string owner_address = 1;
  string spender_address = 2;
  repeated string token_id = 3;
  repeated string path = 4;
}

// Allowance
message Allowance {
  string  owner_address = 1;
  string  spender_address = 2;
  repeated string path = 3;
  uint64 amount = 4;
}

message Allowances {
  repeated Allowance items = 1;
}

// Approved event is emitted when Approve method has been invoked
message Approved  {
  string owner_address = 1;
  string spender_address = 2;
  string token = 3;
  uint64 amount = 4;
}

// TransferredFrom event is emitted when TransferFrom method has been invoked
message TransferredFrom  {
  string owner_address = 1;
  string spender_address = 2;
  string recipient_address = 3;
  uint64 amount = 4;
}